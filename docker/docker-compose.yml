services:
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    build:
      context: ./configs/nginx
      dockerfile: Dockerfile
    volumes:
      - ./../files:/var/www:rw
      - ./configs/nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "8090:80"
    networks:
      - network
    depends_on:
      - php-fpm
    profiles:
      - backend
      - frontend

  php-fpm: # @todo update to 8.2
    container_name: ${COMPOSE_PROJECT_NAME}_php-fpm
    build:
      context: ./configs/php-fpm
      dockerfile: Dockerfile
      target: ${COMPOSE_PROJECT_TYPE} # prod\dev
    volumes:
      - ./../files:/var/www
    networks:
      - network
    depends_on:
      - mysql
    profiles:
      - backend
      - frontend

  mysql:
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    build:
      context: ./configs/mysql
      dockerfile: Dockerfile
    volumes:
      - ./data/mysql:/var/lib/mysql:rw
      - ./configs/mysql/:/docker-entrypoint-initdb.d/:ro
      - ./../files:/var/www
    ports:
      - "13306:3306"
    env_file:
      - .env
    networks:
      - network
    profiles:
      - backend
      - frontend

  mongodb:
    container_name: ${COMPOSE_PROJECT_NAME}_mongodb
    build:
      context: ./configs/mongodb
      dockerfile: Dockerfile
    volumes:
      - ./data/mongodb:/data/db:rw
      - ./configs/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    ports:
      - "37017:27017"
    networks:
      - network
    env_file:
      - .env

  memcached:
    container_name: ${COMPOSE_PROJECT_NAME}_memcached
    build:
      context: ./configs/memcached
      dockerfile: Dockerfile
    command:
      - --conn-limit=1024
      - --memory-limit=64
      - --threads=4
    networks:
      - network
  
  #  postgres: #todo add

  manticoresearch:
    container_name: ${COMPOSE_PROJECT_NAME}_manticoresearch
    build:
      context: ./configs/manticoresearch
      dockerfile: Dockerfile
    volumes:
      - ./data/manticoresearch:/var/lib/manticore
      - ./configs/manticoresearch/manticore.conf:/etc/manticoresearch/manticore.conf
    ports:
      - 19306:9306
      - 19308:9308
    networks:
      - network
  
  nodejs:
    container_name: ${COMPOSE_PROJECT_NAME}_nodejs
    build:
      context: ./configs/nodejs
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./../files:/var/www
    working_dir: /var/www
    networks:
      - network
    profiles:
      - frontend

  valkey:
    container_name: ${COMPOSE_PROJECT_NAME}_valkey
    build:
      context: ./configs/valkey
      dockerfile: Dockerfile
      args:
        - default_password=${VALKEY_USER_PASSWORD}
        - user_name=${VALKEY_USER_NAME}
        - user_password=${VALKEY_USER_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./data/valkey:/data
    tty: true
    stdin_open: true

networks:
  network:
    driver: bridge